# gql서버에 Person이라는 데이터형을 정의하고
type Person{
    id:Int!,
    name:String!,
    age:Int!,
    gender:String!

}


# gql서버에 아래 해당하는 질의가 있다고 알려준다
# (gql에 알려줄때는 아래와 같이 people,person이라는 질의가 있고 각 질의에 해당하는 파라미터 및 반환하는 데이터형을 알려준다)
# 여기서 !는 해당하는 데이터형을 필수적으로 리턴해야하며 null등의 값을 리턴할때 에러가 발생한다
    
type Query{
    people: [Person]!
    person(id: Int!): Person
}



type Movie{
    id:Int!,
    name:String!,
    score:Int!
}

type Query{
    movies:[Movie]!,
    movie(id:Int!):Movie
}

# gql에서 id를 넣지 않아도 resolver에서 id를 증감 시키기 때문에 id는 필요없음
type Mutation{
    addMovie(name:String!,score:Int!): Movie!
    deleteMovie(id:Int):Boolean!
}


# movieWithApi
type MovieWithApi{
    id:Int!,
    url:String!,
    year:Int!,
    rating:Float!,
    gender:[String]
}

type Query{
    getMoviesThrowAPI(limit:Int,minimum_rating:Float):[MovieWithApi]
}
type Mutation{
    insertMovie(name:String!,score:Float!): Movie!
}

